# cloudbuild.yaml

steps:
  # Step 1: Build the Docker container image
  # Uses the Dockerfile in the current directory.
  # Tags the image with the Google Artifact Registry path.
  # $_SERVICE_NAME and $_LOCATION are substitution variables you can set.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:$COMMIT_SHA',
        '.', # Build context is the current directory
      ]
    id: Build

  # Step 2: Push the container image to Google Artifact Registry
  # Requires the Artifact Registry repository to exist beforehand.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'push',
        '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:$BUILD_ID',
      ]
    id: Push

  # Step 3: Deploy the container image to Cloud Run
  # Deploys the image pushed in the previous step.
  # Configures the service with necessary settings and environment variables.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        '${_SERVICE_NAME}', # Name of the Cloud Run service
        '--image',
        '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:$BUILD_ID',
        '--region',
        '${_LOCATION}', # Region for Cloud Run service
        '--platform',
        'managed', # Use fully managed Cloud Run
        '--port',
        '8080', # Port the container listens on (matches Dockerfile EXPOSE and Go code default)
        '--allow-unauthenticated', # Or use '--no-allow-unauthenticated' and configure IAM/IAP
        '--set-env-vars',
        # Pass environment variables required by the Go application
        # Make sure these values are appropriate for your production environment
        'DIALOGFLOW_PROJECT_ID=${_DIALOGFLOW_PROJECT_ID}',
        'DIALOGFLOW_LOCATION_ID=${_DIALOGFLOW_LOCATION_ID}',
        'ALLOWED_ORIGIN=${_ALLOWED_ORIGIN}', # e.g., '[https://your-frontend-domain.com](https://your-frontend-domain.com)'
        # Add other necessary environment variables here
        # 'EXAMPLE_VAR=example_value'
      ]
    id: Deploy

# Define the image tag used for deployment
images:
  - '${_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/${_SERVICE_NAME}:$COMMIT_SHA'

# Define default substitutions (can be overridden at build time)
substitutions:
  _SERVICE_NAME: 'dialogflow-proxy' # Your desired Cloud Run service name
  _LOCATION: 'us-central1'         # The region for Artifact Registry and Cloud Run
  _ARTIFACT_REPO: 'cloudrun-repo'  # Your Artifact Registry repository name
  _DIALOGFLOW_PROJECT_ID: 'your-dialogflow-project-id' # Your Dialogflow Project ID
  _DIALOGFLOW_LOCATION_ID: 'us-central1'              # Your Dialogflow Agent Location
  _ALLOWED_ORIGIN: '*'             # IMPORTANT: Change to your frontend URL for production! '*' is insecure.

# Optional: Timeout for the build
timeout: '1200s' # 20 minutes

options:
  logging: CLOUD_LOGGING_ONLY # Send logs directly to Cloud Logging